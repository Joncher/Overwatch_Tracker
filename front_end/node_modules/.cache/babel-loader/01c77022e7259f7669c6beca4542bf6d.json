{"ast":null,"code":"import _classCallCheck from \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/src/containers/Profile.js\";\nimport React, { Component, Suspense, lazy } from \"react\";\nimport { Button, Grid, Container, Divider, Placeholder } from \"semantic-ui-react\";\nimport ProfileInfo from \"../components/ProfileInfo\";\nimport Loaders from \"../components/Loaders\";\nvar BarGraph = lazy(function () {\n  return import(\"../components/BarGraph\");\n});\nvar LineGraph = lazy(function () {\n  return import(\"../components/LineGraph\");\n});\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Profile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rankingData: [[0, 0]],\n      roleData: [[0, 0]],\n      heroData: [0, 0],\n      filteredHeroData: [],\n      mapData: [],\n      filteredMapData: []\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3001/api/v1/games/\".concat(localStorage.userId), {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.token)\n        }\n      }).then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        return _this2.setState({\n          rankingData: data.map(function (game, index) {\n            return [index, game.new_ranking];\n          }),\n          roleData: [data.filter(function (game) {\n            return game.result != null;\n          }).map(function (game) {\n            return game.hero_one_role;\n          }).filter(function (role) {\n            return role === \"Tank\";\n          }).length, data.filter(function (game) {\n            return game.result != null;\n          }).map(function (game) {\n            return game.hero_one_role;\n          }).filter(function (role) {\n            return role === \"Damage\";\n          }).length, data.filter(function (game) {\n            return game.result != null;\n          }).map(function (game) {\n            return game.hero_one_role;\n          }).filter(function (role) {\n            return role === \"Support\";\n          }).length, 0],\n          heroData: data.filter(function (game) {\n            return game.result != null;\n          }).map(function (game) {\n            return game.hero_one;\n          }).sort(),\n          filteredHeroData: data.filter(function (game) {\n            return game.result != null;\n          }).map(function (game) {\n            return game.hero_one;\n          }).filter(function (value, index, self) {\n            return self.indexOf(value) === index;\n          }).sort(),\n          mapData: data.filter(function (game) {\n            return game.result != null;\n          }).map(function (game) {\n            return game.map;\n          }).sort(),\n          filteredMapData: data.filter(function (game) {\n            return game.result != null;\n          }).map(function (game) {\n            return game.map;\n          }).filter(function (value, index, self) {\n            return self.indexOf(value) === index;\n          })\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state);\n      return React.createElement(Container, {\n        className: \"main \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(ProfileInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        columns: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        className: \"graphs \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Suspense, {\n        fallback: React.createElement(Loaders, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(BarGraph, {\n        name: \"Roles Played(Primary Hero)\",\n        data: this.state.roleData,\n        labels: [\"Tank\", \"Damage\", \"Support\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))), React.createElement(Grid.Column, {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Suspense, {\n        fallback: React.createElement(Loaders, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(LineGraph, {\n        name: \"Skill Rating\",\n        data: this.state.rankingData.map(function (point) {\n          return point[1];\n        }).concat(1000),\n        labels: this.state.rankingData.map(function (point) {\n          return point[0];\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), React.createElement(Grid.Column, {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Suspense, {\n        fallback: React.createElement(Loaders, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(BarGraph, {\n        name: \"Most Played Champion\",\n        data: this.state.filteredHeroData.map(function (filteredHero) {\n          return _this3.state.heroData.filter(function (hero) {\n            return hero === filteredHero;\n          }).length;\n        }).concat(0),\n        labels: this.state.filteredHeroData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }))), React.createElement(Grid.Column, {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Suspense, {\n        fallback: React.createElement(Loaders, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(BarGraph, {\n        name: \"Most Played Map\",\n        data: this.state.filteredMapData.map(function (filteredMap) {\n          return _this3.state.mapData.filter(function (map) {\n            return map === filteredMap;\n          }).length;\n        }).concat(0),\n        labels: this.state.filteredMapData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))))), React.createElement(Placeholder.Line, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/src/containers/Profile.js"],"names":["React","Component","Suspense","lazy","Button","Grid","Container","Divider","Placeholder","ProfileInfo","Loaders","BarGraph","LineGraph","Profile","state","rankingData","roleData","heroData","filteredHeroData","mapData","filteredMapData","fetch","localStorage","userId","method","headers","Accept","Authorization","token","then","r","json","data","setState","map","game","index","new_ranking","filter","result","hero_one_role","role","length","hero_one","sort","value","self","indexOf","console","log","width","point","concat","filteredHero","hero","filteredMap"],"mappings":"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","sourcesContent":["import React, { Component, Suspense, lazy } from \"react\";\nimport {\n  Button,\n  Grid,\n  Container,\n  Divider,\n  Placeholder\n} from \"semantic-ui-react\";\nimport ProfileInfo from \"../components/ProfileInfo\";\nimport Loaders from \"../components/Loaders\";\n\nconst BarGraph = lazy(() => import(\"../components/BarGraph\"));\nconst LineGraph = lazy(() => import(\"../components/LineGraph\"));\n\nclass Profile extends Component {\n  state = {\n    rankingData: [[0, 0]],\n    roleData: [[0, 0]],\n    heroData: [0, 0],\n    filteredHeroData: [],\n    mapData: [],\n    filteredMapData: []\n  };\n  componentDidMount() {\n    fetch(`http://localhost:3001/api/v1/games/${localStorage.userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    })\n      .then(r => r.json())\n      .then(data =>\n        this.setState({\n          rankingData: data.map((game, index) => [index, game.new_ranking]),\n          roleData: [\n            data\n              .filter(game => game.result != null)\n              .map(game => game.hero_one_role)\n              .filter(role => role === \"Tank\").length,\n            data\n              .filter(game => game.result != null)\n              .map(game => game.hero_one_role)\n              .filter(role => role === \"Damage\").length,\n            data\n              .filter(game => game.result != null)\n              .map(game => game.hero_one_role)\n              .filter(role => role === \"Support\").length,\n            0\n          ],\n          heroData: data\n            .filter(game => game.result != null)\n            .map(game => game.hero_one)\n            .sort(),\n\n          filteredHeroData: data\n            .filter(game => game.result != null)\n            .map(game => game.hero_one)\n            .filter(function(value, index, self) {\n              return self.indexOf(value) === index;\n            })\n            .sort(),\n          mapData: data\n            .filter(game => game.result != null)\n            .map(game => game.map)\n            .sort(),\n          filteredMapData: data\n            .filter(game => game.result != null)\n            .map(game => game.map)\n            .filter(function(value, index, self) {\n              return self.indexOf(value) === index;\n            })\n        })\n      );\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <Container className=\"main \">\n        <ProfileInfo />\n        <Grid columns={1}>\n          <Grid.Row className=\"graphs \">\n            <Grid.Column style={{ width: \"100%\" }}>\n              <Suspense fallback={<Loaders />}>\n                <BarGraph\n                  name=\"Roles Played(Primary Hero)\"\n                  data={this.state.roleData}\n                  labels={[\"Tank\", \"Damage\", \"Support\"]}\n                />\n              </Suspense>\n            </Grid.Column>\n            <Grid.Column style={{ width: \"100%\" }}>\n              <Suspense fallback={<Loaders />}>\n                <LineGraph\n                  name=\"Skill Rating\"\n                  data={this.state.rankingData\n                    .map(point => point[1])\n                    .concat(1000)}\n                  labels={this.state.rankingData.map(point => point[0])}\n                />\n              </Suspense>\n            </Grid.Column>\n            <Grid.Column style={{ width: \"100%\" }}>\n              <Suspense fallback={<Loaders />}>\n                <BarGraph\n                  name=\"Most Played Champion\"\n                  data={this.state.filteredHeroData\n                    .map(\n                      filteredHero =>\n                        this.state.heroData.filter(\n                          hero => hero === filteredHero\n                        ).length\n                    )\n                    .concat(0)}\n                  labels={this.state.filteredHeroData}\n                />\n              </Suspense>\n            </Grid.Column>\n            <Grid.Column style={{ width: \"100%\" }}>\n              <Suspense fallback={<Loaders />}>\n                <BarGraph\n                  name=\"Most Played Map\"\n                  data={this.state.filteredMapData\n                    .map(\n                      filteredMap =>\n                        this.state.mapData.filter(map => map === filteredMap)\n                          .length\n                    )\n                    .concat(0)}\n                  labels={this.state.filteredMapData}\n                />\n              </Suspense>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Placeholder.Line />\n      </Container>\n    );\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}