{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.positionLeft = exports.positionBottom = exports.positionRight = exports.positionTop = undefined;\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _Context = require('../utils/Context');\n\nvar _Utils = require('../utils/Utils');\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _AxisLinear = require('./AxisLinear.measure');\n\nvar _AxisLinear2 = _interopRequireDefault(_AxisLinear);\n\nvar _AxisLinear3 = require('./AxisLinear.updateScale');\n\nvar _AxisLinear4 = _interopRequireDefault(_AxisLinear3);\n\nvar _Path = require('../primitives/Path');\n\nvar _Path2 = _interopRequireDefault(_Path);\n\nvar _Line = require('../primitives/Line');\n\nvar _Line2 = _interopRequireDefault(_Line);\n\nvar _Text = require('../primitives/Text');\n\nvar _Text2 = _interopRequireDefault(_Text);\n\nvar _Group = require('../primitives/Group');\n\nvar _Group2 = _interopRequireDefault(_Group);\n\nvar _Selectors = require('../utils/Selectors');\n\nvar _Selectors2 = _interopRequireDefault(_Selectors);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} //\n\n\nvar positionTop = exports.positionTop = 'top';\nvar positionRight = exports.positionRight = 'right';\nvar positionBottom = exports.positionBottom = 'bottom';\nvar positionLeft = exports.positionLeft = 'left';\nvar defaultStyles = {\n  line: {\n    strokeWidth: '1',\n    fill: 'transparent'\n  },\n  tick: {\n    fontSize: 10,\n    fontFamily: 'sans-serif'\n  }\n};\n\nvar Axis = function (_React$Component) {\n  _inherits(Axis, _React$Component);\n\n  function Axis() {\n    _classCallCheck(this, Axis);\n\n    var _this = _possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this));\n\n    _this.state = {\n      rotation: 0\n    };\n    _this.measure = _Utils2.default.throttle(_AxisLinear2.default.bind(_this));\n    _this.measureRotation = _Utils2.default.throttle(_AxisLinear2.default.bind(_this));\n    _this.updateScale = _AxisLinear4.default.bind(_this);\n    return _this;\n  }\n\n  _createClass(Axis, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.updateScale(this.props);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(oldProps, oldState) {\n      if (oldProps.axis !== this.props.axis && oldProps.axis) {\n        this.prevAxis = oldProps.axis;\n      } // If any of the following changed,\n      // we need to update the axis\n\n\n      if (!this.props.axis && this.props.primaryAxes !== oldProps.primaryAxes || this.props.primary !== oldProps.primary || this.props.type !== oldProps.type || this.props.invert !== oldProps.invert || this.props.materializedData !== oldProps.materializedData || this.props.height !== oldProps.height || this.props.width !== oldProps.width || this.props.position !== oldProps.position || this.props.min !== oldProps.min || this.props.max !== oldProps.max || this.props.hardMin !== oldProps.hardMin || this.props.hardMax !== oldProps.hardMax) {\n        this.updateScale(this.props);\n      }\n\n      if (this.props.axis !== oldProps.axis || oldState.rotation !== this.state.rotation) {\n        this.measure();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          type = _props.type,\n          axis = _props.axis,\n          position = _props.position,\n          width = _props.width,\n          height = _props.height,\n          tickSizeInner = _props.tickSizeInner,\n          tickSizeOuter = _props.tickSizeOuter,\n          show = _props.show,\n          showGrid = _props.showGrid,\n          showTicks = _props.showTicks,\n          styles = _props.styles,\n          dark = _props.dark;\n      var rotation = this.state.rotation; // Combine default styles with style props\n\n      var axisStyles = _extends({}, defaultStyles, styles); // Render Dependencies\n\n\n      if (!axis || !show) {\n        return null;\n      }\n\n      var scale = axis.scale,\n          max = axis.max,\n          transform = axis.transform,\n          vertical = axis.vertical,\n          format = axis.format,\n          ticks = axis.ticks,\n          _axis$range = _slicedToArray(axis.range, 2),\n          range0 = _axis$range[0],\n          range1 = _axis$range[1],\n          directionMultiplier = axis.directionMultiplier,\n          tickOffset = axis.tickOffset,\n          gridOffset = axis.gridOffset,\n          spacing = axis.spacing;\n\n      var axisPath = void 0;\n\n      if (vertical) {\n        if (position === positionLeft) {\n          axisPath = '\\n                M ' + -tickSizeOuter + ', ' + range0 + '\\n                H 0\\n                V ' + range1 + '\\n                H ' + -tickSizeOuter + '\\n              ';\n        } else {\n          axisPath = '\\n                M ' + tickSizeOuter + ', ' + range0 + '\\n                H 0\\n                V ' + range1 + '\\n                H ' + tickSizeOuter + '\\n              ';\n        }\n      } else if (position === positionBottom) {\n        axisPath = '\\n                M 0, ' + tickSizeOuter + '\\n                V 0\\n                H ' + range1 + '\\n                V ' + tickSizeOuter + '\\n              ';\n      } else {\n        axisPath = '\\n                M 0, ' + -tickSizeOuter + '\\n                V 0\\n                H ' + range1 + '\\n                V ' + -tickSizeOuter + '\\n              ';\n      }\n\n      var showGridLine = void 0;\n\n      if (typeof showGrid === 'boolean') {\n        showGridLine = showGrid;\n      } else if (type === 'ordinal') {\n        showGridLine = false;\n      } else {\n        showGridLine = true;\n      }\n\n      return _react2.default.createElement(_Group2.default, {\n        className: 'Axis',\n        style: {\n          pointerEvents: 'none',\n          transition: 'none',\n          transform: position === positionRight ? translateX(width) : position === positionBottom ? translateY(height) : undefined\n        }\n      }, _react2.default.createElement(_Path2.default, {\n        className: 'domain',\n        d: axisPath,\n        style: _extends({\n          stroke: dark ? 'rgba(255,255,255, .1)' : 'rgba(0,0,0, .1)'\n        }, axisStyles.line, {\n          transition: 'none'\n        })\n      }), _react2.default.createElement(_Group2.default, {\n        className: 'ticks',\n        innerRef: function innerRef(el) {\n          _this2.el = el;\n        },\n        style: {\n          transition: 'none'\n        }\n      }, ticks.map(function (tick, i) {\n        return _react2.default.createElement(_Group2.default, {\n          key: tick,\n          className: 'tick',\n          style: {\n            transition: 'none',\n            transform: transform(scale(tick) || 0)\n          }\n        }, showTicks ? _react2.default.createElement(_Line2.default, {\n          x1: vertical ? 0 : tickOffset,\n          x2: vertical ? directionMultiplier * tickSizeInner : tickOffset,\n          y1: vertical ? tickOffset : 0,\n          y2: vertical ? tickOffset : directionMultiplier * tickSizeInner,\n          style: _extends({\n            stroke: dark ? 'rgba(255,255,255, .1)' : 'rgba(0,0,0, .1)',\n            strokeWidth: 1\n          }, axisStyles.line, {\n            transition: 'none'\n          })\n        }) : null, showGridLine && _react2.default.createElement(_Line2.default, {\n          x1: vertical ? 0 : gridOffset,\n          x2: vertical ? max : gridOffset,\n          y1: vertical ? gridOffset : 0,\n          y2: vertical ? gridOffset : max,\n          style: _extends({\n            stroke: dark ? 'rgba(255,255,255, .1)' : 'rgba(0,0,0, .1)',\n            strokeWidth: 1\n          }, axisStyles.line, {\n            transition: 'none'\n          })\n        }), showTicks ? _react2.default.createElement(_Text2.default, {\n          style: _extends({\n            fill: dark ? 'white' : 'black'\n          }, axisStyles.tick, {\n            transition: 'none',\n            transform: 'translate3d(' + (vertical ? directionMultiplier * spacing : tickOffset) + 'px, ' + (vertical ? tickOffset : directionMultiplier * spacing) + 'px, 0) rotate(' + -rotation + 'deg)'\n          }),\n          dominantBaseline: rotation ? 'central' : position === positionBottom ? 'hanging' : position === positionTop ? 'alphabetic' : 'central',\n          textAnchor: rotation ? 'end' : position === positionRight ? 'start' : position === positionLeft ? 'end' : 'middle'\n        }, String(format(tick, i))) : null);\n      })));\n    }\n  }]);\n\n  return Axis;\n}(_react2.default.Component);\n\nAxis.defaultProps = {\n  min: undefined,\n  max: undefined,\n  hardMin: undefined,\n  hardMax: undefined,\n  base: undefined,\n  tickArguments: [],\n  tickValues: null,\n  tickFormat: null,\n  tickSizeInner: 6,\n  tickSizeOuter: 6,\n  tickPadding: 3,\n  maxLabelRotation: 50,\n  innerPadding: 0.2,\n  outerPadding: 0.1,\n  showGrid: null,\n  showTicks: true,\n  show: true\n};\nexports.default = (0, _Context.ChartConnect)(function () {\n  var selectors = {\n    gridWidth: _Selectors2.default.gridWidth(),\n    gridHeight: _Selectors2.default.gridHeight(),\n    primaryAxes: _Selectors2.default.primaryAxes()\n  };\n  return function (state, props) {\n    var type = props.type,\n        position = props.position,\n        userID = props.id;\n    var id = userID || type + '_' + position;\n    return {\n      id: id,\n      primaryAxes: selectors.primaryAxes(state),\n      // This is needed in AxisLinear.updateScale.js\n      width: selectors.gridWidth(state),\n      height: selectors.gridHeight(state),\n      materializedData: state.materializedData,\n      axis: state.axes && state.axes[id],\n      dark: state.dark\n    };\n  };\n})(Axis);\n\nfunction translateX(x) {\n  return 'translate3d(' + x + 'px, 0, 0)';\n}\n\nfunction translateY(y) {\n  return 'translate3d(0, ' + y + 'px, 0)';\n}","map":null,"metadata":{},"sourceType":"script"}