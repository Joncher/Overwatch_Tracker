{"ast":null,"code":"import _classCallCheck from \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/src/components/GameCard.js\";\nimport React, { Component } from \"react\";\nimport { Card, Image, Grid, Container, Popup, Button, Icon } from \"semantic-ui-react\";\nimport \"../containers/App.css\";\n\nvar GameCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GameCard, _Component);\n\n  function GameCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GameCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GameCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.setTimeToTimefFrom = function (time) {\n      var timeFrom = Date.now() - Date.parse(time);\n      var seconds = Math.floor(timeFrom / 1000 % 60);\n      var minutes = Math.floor(timeFrom / (1000 * 60) % 60);\n      var hours = Math.floor(timeFrom / (1000 * 60 * 60) % 24);\n      var days = Math.floor(timeFrom / (1000 * 60 * 60 * 24) % 30);\n\n      if (days > 0) {\n        return days + \" day(s)\";\n      } else if (hours > 0) {\n        return hours + \" hour(s)\";\n      } else if (minutes > 0) {\n        return minutes + \" minute(s)\";\n      } else {\n        return seconds + \" seconds\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GameCard, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.info);\n      return React.createElement(Card, {\n        className: this.props.info.result,\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 4,\n        padded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"portrait\",\n        fluid: true,\n        src: require(\"../images/portraits/\".concat(this.props.info.hero_one, \"-select-portrait.png\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Container, {\n        as: \"h3\",\n        className: \"cardtext\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.props.info.hero_one), React.createElement(Container, {\n        as: \"h3\",\n        className: \"cardtext\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Primary Hero\")), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"portrait\",\n        fluid: true,\n        src: require(\"../images/portraits/\".concat(this.props.info.hero_two, \"-select-portrait.png\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Container, {\n        as: \"h3\",\n        textAlign: \"center\",\n        className: \"cardtext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.info.hero_two), React.createElement(Container, {\n        as: \"h3\",\n        textAlign: \"center\",\n        className: \"cardtext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Secondary Hero\")), React.createElement(Grid.Column, {\n        width: \"eight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"map\",\n        fluid: true,\n        src: require(\"../images/maps/\".concat(this.props.info.map, \"_map.jpg\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Container, {\n        as: \"h3\",\n        textAlign: \"center\",\n        className: \"cardtext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.props.info.map), React.createElement(Container, {\n        as: \"h3\",\n        textAlign: \"center\",\n        className: \"cardtext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Map\"), React.createElement(Container, {\n        as: \"h1\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Played \", this.setTimeToTimefFrom(this.props.info.created_at), \" ago\")), React.createElement(Popup, {\n        style: {\n          position: \"absolute\",\n          width: \"500px\",\n          height: \"25%\"\n        },\n        trigger: React.createElement(Button, {\n          icon: \"add\",\n          className: \"show\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }),\n        content: React.createElement(Card, {\n          fluid: true,\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Details\"), React.createElement(Card.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"`$\", this.props.info.details, \"`\"))),\n        basic: true,\n        verticalOffset: 185,\n        position: \"top right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return GameCard;\n}(Component);\n\nexport default GameCard;","map":{"version":3,"sources":["/Users/johnoncher/dev/mod-5/reset/overwatch_tracker/front_end/src/components/GameCard.js"],"names":["React","Component","Card","Image","Grid","Container","Popup","Button","Icon","GameCard","setTimeToTimefFrom","time","timeFrom","Date","now","parse","seconds","Math","floor","minutes","hours","days","console","log","props","info","result","require","hero_one","hero_two","map","created_at","position","width","height","details"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,IAPF,QAQO,mBARP;AASA,OAAO,uBAAP;;IAEMC,Q;;;;;;;;;;;;;;;;;;UACJC,kB,GAAqB,UAAAC,IAAI,EAAI;AAC3B,UAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,KAAaD,IAAI,CAACE,KAAL,CAAWJ,IAAX,CAA9B;AACA,UAAIK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYN,QAAQ,GAAG,IAAZ,GAAoB,EAA/B,CAAd;AACA,UAAIO,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYN,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,EAAtC,CAAd;AACA,UAAIQ,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAYN,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,GAAgC,EAA3C,CAAZ;AACA,UAAIS,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAYN,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,GAAqC,EAAhD,CAAX;;AAEA,UAAIS,IAAI,GAAG,CAAX,EAAc;AACZ,eAAOA,IAAI,GAAG,SAAd;AACD,OAFD,MAEO,IAAID,KAAK,GAAG,CAAZ,EAAe;AACpB,eAAOA,KAAK,GAAG,UAAf;AACD,OAFM,MAEA,IAAID,OAAO,GAAG,CAAd,EAAiB;AACtB,eAAOA,OAAO,GAAG,YAAjB;AACD,OAFM,MAEA;AACL,eAAOH,OAAO,GAAG,UAAjB;AACD;AACF,K;;;;;;;6BAEQ;AACPM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,IAAvB;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,MAAjC;AAAyC,QAAA,KAAK,EAAE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAf;AAAkB,QAAA,MAAM,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,KAAK,EAAE,IAFT;AAGE,QAAA,GAAG,EAAEC,OAAO,+BACV,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,QADN,0BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,IAAd;AAAmB,QAAA,SAAS,EAAC,UAA7B;AAAwC,QAAA,SAAS,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKJ,KAAL,CAAWC,IAAX,CAAgBG,QADnB,CARF,EAWE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,IAAd;AAAmB,QAAA,SAAS,EAAC,UAA7B;AAAwC,QAAA,SAAS,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF,CADF,EAiBE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,KAAK,EAAE,IAFT;AAGE,QAAA,GAAG,EAAED,OAAO,+BACV,KAAKH,KAAL,CAAWC,IAAX,CAAgBI,QADN,0BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,IAAd;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,SAAS,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKL,KAAL,CAAWC,IAAX,CAAgBI,QADnB,CARF,EAYE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,IAAd;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,SAAS,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAZF,CAjBF,EAiCE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,KAAK,EAAE,IAFT;AAGE,QAAA,GAAG,EAAEF,OAAO,0BAAmB,KAAKH,KAAL,CAAWC,IAAX,CAAgBK,GAAnC,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,IAAd;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,SAAS,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKN,KAAL,CAAWC,IAAX,CAAgBK,GADnB,CANF,EASE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,IAAd;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,SAAS,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,EAYE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,IAAd;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACU,KAAKpB,kBAAL,CAAwB,KAAKc,KAAL,CAAWC,IAAX,CAAgBM,UAAxC,CADV,SAZF,CAjCF,EAiDE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,KAAK,EAAE,OAA/B;AAAwCC,UAAAA,MAAM,EAAE;AAAhD,SADT;AAEE,QAAA,OAAO,EAAE,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,KAAb;AAAmB,UAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFX;AAGE,QAAA,OAAO,EACL,oBAAC,IAAD;AAAM,UAAA,KAAK,MAAX;AAAY,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,MAAM,EAAE;AAAzB,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACK,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,OADrB,MAFF,CADF,CAJJ;AAaE,QAAA,KAAK,MAbP;AAcE,QAAA,cAAc,EAAE,GAdlB;AAeE,QAAA,QAAQ,EAAC,WAfX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjDF,CADF,CADF,CADF;AAyED;;;;EA9FoBlC,S;;AAiGvB,eAAeQ,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  Image,\n  Grid,\n  Container,\n  Popup,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport \"../containers/App.css\";\n\nclass GameCard extends Component {\n  setTimeToTimefFrom = time => {\n    const timeFrom = Date.now() - Date.parse(time);\n    let seconds = Math.floor((timeFrom / 1000) % 60);\n    let minutes = Math.floor((timeFrom / (1000 * 60)) % 60);\n    let hours = Math.floor((timeFrom / (1000 * 60 * 60)) % 24);\n    let days = Math.floor((timeFrom / (1000 * 60 * 60 * 24)) % 30);\n\n    if (days > 0) {\n      return days + \" day(s)\";\n    } else if (hours > 0) {\n      return hours + \" hour(s)\";\n    } else if (minutes > 0) {\n      return minutes + \" minute(s)\";\n    } else {\n      return seconds + \" seconds\";\n    }\n  };\n\n  render() {\n    console.log(this.props.info);\n    return (\n      <Card className={this.props.info.result} fluid={true}>\n        <Grid columns={4} padded>\n          <Grid.Row>\n            <Grid.Column>\n              <Image\n                className=\"portrait\"\n                fluid={true}\n                src={require(`../images/portraits/${\n                  this.props.info.hero_one\n                }-select-portrait.png`)}\n              />\n              <Container as=\"h3\" className=\"cardtext\" textAlign=\"center\">\n                {this.props.info.hero_one}\n              </Container>\n              <Container as=\"h3\" className=\"cardtext\" textAlign=\"center\">\n                Primary Hero\n              </Container>\n            </Grid.Column>\n\n            <Grid.Column>\n              <Image\n                className=\"portrait\"\n                fluid={true}\n                src={require(`../images/portraits/${\n                  this.props.info.hero_two\n                }-select-portrait.png`)}\n              />\n              <Container as=\"h3\" textAlign=\"center\" className=\"cardtext\">\n                {this.props.info.hero_two}\n              </Container>\n\n              <Container as=\"h3\" textAlign=\"center\" className=\"cardtext\">\n                Secondary Hero\n              </Container>\n            </Grid.Column>\n            <Grid.Column width=\"eight\">\n              <Image\n                className=\"map\"\n                fluid={true}\n                src={require(`../images/maps/${this.props.info.map}_map.jpg`)}\n              />\n              <Container as=\"h3\" textAlign=\"center\" className=\"cardtext\">\n                {this.props.info.map}\n              </Container>\n              <Container as=\"h3\" textAlign=\"center\" className=\"cardtext\">\n                Map\n              </Container>\n              <Container as=\"h1\" textAlign=\"center\">\n                Played {this.setTimeToTimefFrom(this.props.info.created_at)} ago\n              </Container>\n            </Grid.Column>\n            <Popup\n              style={{ position: \"absolute\", width: \"500px\", height: \"25%\" }}\n              trigger={<Button icon=\"add\" className=\"show\" />}\n              content={\n                <Card fluid style={{ width: \"100%\", height: \"100%\" }}>\n                  <Card.Content>\n                    <Card.Header>Details</Card.Header>\n                    <Card.Description>\n                      `${this.props.info.details}`\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              }\n              basic\n              verticalOffset={185}\n              position=\"top right\"\n            />\n          </Grid.Row>\n        </Grid>\n      </Card>\n    );\n  }\n}\n\nexport default GameCard;\n"]},"metadata":{},"sourceType":"module"}