{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Utils = require('../utils/Utils');\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _detectElementResize = require('./detectElementResize');\n\nvar _detectElementResize2 = _interopRequireDefault(_detectElementResize);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} //\n\n\nvar HyperResponsive = function (_React$Component) {\n  _inherits(HyperResponsive, _React$Component);\n\n  function HyperResponsive() {\n    _classCallCheck(this, HyperResponsive);\n\n    var _this = _possibleConstructorReturn(this, (HyperResponsive.__proto__ || Object.getPrototypeOf(HyperResponsive)).call(this));\n\n    _this.resize = _Utils2.default.throttle(function () {\n      if (!_this.el) {\n        return;\n      }\n\n      var computed = window.getComputedStyle(_this.el.parentElement);\n      var paddingTop = computed.paddingTop,\n          paddingBottom = computed.paddingBottom,\n          paddingLeft = computed.paddingLeft,\n          paddingRight = computed.paddingRight,\n          boxSizing = computed.boxSizing,\n          borderTopWidth = computed.borderTopWidth,\n          borderLeftWidth = computed.borderLeftWidth,\n          borderRightWidth = computed.borderRightWidth,\n          borderBottomWidth = computed.borderBottomWidth;\n      var width = computed.width,\n          height = computed.height;\n      width = parseInt(width);\n      height = parseInt(height);\n\n      if (boxSizing === 'border-box') {\n        width -= parseInt(paddingLeft);\n        width -= parseInt(paddingRight);\n        height -= parseInt(paddingTop);\n        height -= parseInt(paddingBottom);\n        width -= parseInt(borderLeftWidth);\n        width -= parseInt(borderRightWidth);\n        height -= parseInt(borderTopWidth);\n        height -= parseInt(borderBottomWidth);\n      }\n\n      _this.setState({\n        width: width,\n        height: height\n      });\n    });\n\n    _this.handleRef = function (el) {\n      _this.el = el;\n    };\n\n    _this.state = {\n      width: 0,\n      height: 0\n    };\n    return _this;\n  }\n\n  _createClass(HyperResponsive, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (!this.resizeListener && this.el && this.el.parentElement) {\n        this.resizeListener = (0, _detectElementResize2.default)(this.el.parentElement, this.resize);\n      }\n\n      this.resize();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.resizeListener) {\n        this.resizeListener();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          render = _props.render,\n          children = _props.children;\n      var _state = this.state,\n          width = _state.width,\n          height = _state.height;\n      var handleRef = this.handleRef;\n      return (render || children)({\n        handleRef: handleRef,\n        width: width,\n        height: height\n      });\n    }\n  }]);\n\n  return HyperResponsive;\n}(_react2.default.Component);\n\nexports.default = HyperResponsive;","map":null,"metadata":{},"sourceType":"script"}