{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = detectElemenResize;\n/**\n * Detect Element Resize\n * Reworked from https://github.com/sdecima/javascript-detect-element-resize\n * */\n// eslint-disable-next-line\n\nvar onResize = function onResize() {\n  console.warn('onResize is not available without the DOM!');\n};\n\nfunction detectElemenResize() {\n  return onResize.apply(undefined, arguments);\n} // Only init if in the DOM\n\n\nif (typeof document !== 'undefined') {\n  var attachEvent = document.attachEvent; // If attachEvent is available, use it instead.\n\n  if (attachEvent) {\n    onResize = function onResize(element, fn) {\n      element.attachEvent('onresize', fn);\n      return function () {\n        return element.detachEvent('onresize', fn);\n      };\n    };\n  } else {\n    // eslint-disable-next-line\n    var scrollListener = function scrollListener(e) {\n      var element = this;\n      resetTriggers(this);\n      if (this.__resizeRAF__) cancelFrame(this.__resizeRAF__);\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    }; // Otherwise, get on with it!\n    // Keep track of whether the styles have been created or not\n\n\n    var stylesCreated = false; // Make sure we have a RAF\n\n    var requestFrame = function () {\n      var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function (fn) {\n        return window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }(); // And a way to cancel the RAF\n\n\n    var cancelFrame = function () {\n      var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false;\n    var keyframeprefix = '';\n    var animationstartevent = 'animationstart';\n    var domPrefixes = 'Webkit Moz O ms'.split(' ');\n    var startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' ');\n    var pfx = '';\n    var elm = document.createElement('fakeelement');\n\n    if (elm.style.animationName !== undefined) {\n      animation = true;\n    }\n\n    if (animation === false) {\n      for (var i = 0; i < domPrefixes.length; i++) {\n        if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n          pfx = domPrefixes[i];\n          keyframeprefix = '-' + pfx.toLowerCase() + '-';\n          animationstartevent = startEvents[i];\n          animation = true;\n          break;\n        }\n      }\n    }\n\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__;\n      var expand = triggers.firstElementChild;\n      var contract = triggers.lastElementChild;\n      var expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth !== element.__resizeLast__.width || element.offsetHeight !== element.__resizeLast__.height;\n    };\n\n    var createStyles = function createStyles() {\n      if (!stylesCreated) {\n        // opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n        var css = (animationKeyframes || '') + '.resize-triggers { ' + (animationStyle || '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }';\n        var head = document.head || document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if (style.styleSheet) {\n          style.styleSheet.cssText = css;\n        } else {\n          style.appendChild(document.createTextNode(css));\n        }\n\n        head.appendChild(style);\n        stylesCreated = true;\n      }\n    };\n\n    onResize = function onResize(element, fn) {\n      if (!element.__resizeTriggers__) {\n        if (getComputedStyle(element).position === 'static') element.style.position = 'relative';\n        createStyles();\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = document.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div><div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.addEventListener(animationstartevent, function (e) {\n            if (e.animationName === animationName) resetTriggers(element);\n          });\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n\n      return function () {\n        element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n        if (!element.__resizeListeners__.length) {\n          element.removeEventListener('scroll', scrollListener);\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        }\n      };\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"script"}