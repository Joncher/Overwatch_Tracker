{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Memoize = require('./Memoize');\n\nvar _Memoize2 = _interopRequireDefault(_Memoize);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = {\n  primaryAxes: function primaryAxes() {\n    return (0, _Memoize2.default)(function (state) {\n      return [state.axes];\n    }, function (axes) {\n      if (!axes) return [];\n      return Object.keys(axes).map(function (key) {\n        if (axes[key].primary) {\n          return axes[key];\n        }\n\n        return null;\n      }).filter(Boolean);\n    });\n  },\n  secondaryAxes: function secondaryAxes() {\n    return (0, _Memoize2.default)(function (state) {\n      return [state.axes];\n    }, function (axes) {\n      if (!axes) return [];\n      return Object.keys(axes).map(function (key) {\n        if (!axes[key].primary) {\n          return axes[key];\n        }\n\n        return null;\n      }).filter(Boolean);\n    });\n  },\n  offset: function offset() {\n    return (0, _Memoize2.default)(function (state) {\n      return [state && state.offset && state.offset.left || 0, state && state.offset && state.offset.top || 0];\n    }, function (left, top) {\n      return {\n        left: left,\n        top: top\n      };\n    });\n  },\n  gridX: function gridX() {\n    return (0, _Memoize2.default)(function (state) {\n      return [state && state.padding && state.padding.left || 0, state && state.axisDimensions && state.axisDimensions.left, state && state.axisDimensions && state.axisDimensions.top, state && state.axisDimensions && state.axisDimensions.bottom];\n    }, function (paddingLeft, axisDimensionsLeft, axisDimensionsTop, axisDimensionsBottom) {\n      var axesLeftWidth = axisDimensionsLeft && sumObjBy(axisDimensionsLeft, 'width') || 0;\n      var axesTopLeft = axisDimensionsTop && sumObjBy(axisDimensionsTop, 'left') || 0;\n      var axesBottomLeft = axisDimensionsBottom && sumObjBy(axisDimensionsBottom, 'left') || 0;\n      return paddingLeft + Math.max(axesLeftWidth, axesTopLeft, axesBottomLeft);\n    });\n  },\n  gridY: function gridY() {\n    return (0, _Memoize2.default)(function (state) {\n      return [state && state.padding && state.padding.top || 0, state && state.axisDimensions && state.axisDimensions.top, state && state.axisDimensions && state.axisDimensions.left, state && state.axisDimensions && state.axisDimensions.right];\n    }, function (paddingTop, axisDimensionsTop, axisDimensionsLeft, axisDimensionsRight) {\n      var axesTopHeight = axisDimensionsTop && sumObjBy(axisDimensionsTop, 'height') || 0;\n      var axesLeftTop = axisDimensionsLeft && sumObjBy(axisDimensionsLeft, 'top') || 0;\n      var axesRightTop = axisDimensionsRight && sumObjBy(axisDimensionsRight, 'top') || 0;\n      return paddingTop + Math.max(axesTopHeight, axesLeftTop, axesRightTop);\n    });\n  },\n  gridWidth: function gridWidth() {\n    return (0, _Memoize2.default)(function (state) {\n      return [state && state.width, state && state.padding, state && state.axisDimensions && state.axisDimensions.top, state && state.axisDimensions && state.axisDimensions.bottom, state && state.axisDimensions && state.axisDimensions.left, state && state.axisDimensions && state.axisDimensions.right];\n    }, function (width, padding, axisDimensionsTop, axisDimensionsBottom, axisDimensionsLeft, axisDimensionsRight) {\n      var paddingLeft = padding && padding.left || 0;\n      var paddingRight = padding && padding.right || 0;\n      var axesLeftWidth = axisDimensionsLeft && sumObjBy(axisDimensionsLeft, 'width') || 0;\n      var axesRightWidth = axisDimensionsRight && sumObjBy(axisDimensionsRight, 'width') || 0;\n      var axesTopLeft = axisDimensionsTop && sumObjBy(axisDimensionsTop, 'left') || 0;\n      var axesTopRight = axisDimensionsTop && sumObjBy(axisDimensionsTop, 'right') || 0;\n      var axesBottomLeft = axisDimensionsBottom && sumObjBy(axisDimensionsBottom, 'left') || 0;\n      var axesBottomRight = axisDimensionsBottom && sumObjBy(axisDimensionsBottom, 'right') || 0;\n      return (width || 0) - paddingLeft - paddingRight - Math.max(axesLeftWidth, axesTopLeft, axesBottomLeft) - Math.max(axesRightWidth, axesTopRight, axesBottomRight);\n    });\n  },\n  gridHeight: function gridHeight() {\n    return (0, _Memoize2.default)(function (state) {\n      return [state && state.height, state && state.padding, state && state.axisDimensions && state.axisDimensions.top, state && state.axisDimensions && state.axisDimensions.bottom, state && state.axisDimensions && state.axisDimensions.left, state && state.axisDimensions && state.axisDimensions.right];\n    }, function (height, padding, axisDimensionsTop, axisDimensionsBottom, axisDimensionsLeft, axisDimensionsRight) {\n      var paddingTop = padding && padding.top || 0;\n      var paddingBottom = padding && padding.right || 0;\n      var axesTopHeight = axisDimensionsTop && sumObjBy(axisDimensionsTop, 'height') || 0;\n      var axesBottomHeight = axisDimensionsBottom && sumObjBy(axisDimensionsBottom, 'height') || 0;\n      var axesLeftTop = axisDimensionsLeft && sumObjBy(axisDimensionsLeft, 'top') || 0;\n      var axesLeftBottom = axisDimensionsLeft && sumObjBy(axisDimensionsLeft, 'bottom') || 0;\n      var axesRightTop = axisDimensionsRight && sumObjBy(axisDimensionsRight, 'top') || 0;\n      var axesRightBottom = axisDimensionsRight && sumObjBy(axisDimensionsRight, 'bottom') || 0;\n      return (height || 0) - paddingTop - paddingBottom - Math.max(axesTopHeight, axesLeftTop, axesRightTop) - Math.max(axesBottomHeight, axesLeftBottom, axesRightBottom);\n    });\n  }\n};\n\nfunction sumObjBy(obj, str) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  }).reduce(function (prev, curr) {\n    return prev + curr[str] || 0;\n  }, 0);\n}","map":null,"metadata":{},"sourceType":"script"}